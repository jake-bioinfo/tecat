% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f03-CNN_telo_find.R, R/f03-Pattern_searching.R
\name{telo_search}
\alias{telo_search}
\title{Search for Telomeres}
\usage{
telo_search(
  fastq_files = NULL,
  grep_list = NULL,
  names_prefix = "telomere_",
  threads = 1,
  out_dir = getwd(),
  process_file_number = 1,
  return_telomeres = FALSE,
  verbose = FALSE,
  progress = FALSE
)

telo_search(
  fastq_files = NULL,
  grep_list = NULL,
  names_prefix = "telomere_",
  threads = 1,
  out_dir = getwd(),
  process_file_number = 1,
  return_telomeres = FALSE,
  verbose = FALSE,
  progress = FALSE
)
}
\arguments{
\item{fastq_files}{A character vector of fastq files to search.}

\item{grep_list}{A character vector of telomere motifs to search for.}

\item{names_prefix}{A character string to prefix the names of the telomere sequences.}

\item{threads}{An integer of the number of threads to use.}

\item{out_dir}{A character string of the output directory.}

\item{process_file_number}{An integer of the number of files to process at once.}

\item{return_telomeres}{A logical of whether to return the telomere sequences.}

\item{verbose}{A logical of whether to print messages.}

\item{progress}{A logical of whether to show a progress bar.}
}
\value{
A \code{list} of telomere sequences (if \code{return_telomere}: is TRUE), 
\code{data.table} of statistics, and a file \code{list}.

A \code{list} of telomere sequences (if \code{return_telomere}: is TRUE), 
\code{data.table} of statistics, and a file \code{list}.
}
\description{
\code{telo_search} takes as input a \code{list} of fastq files and 
searches for telomere repeats in the sequences. It returns a 
list of sequences which contain telomere repeats (if \code{return_telomeres}: TRUE),
a \code{data.table} of statistics for each file and a \code{list} of files.
\code{return_telomeres} should only be TRUE when you have an exssesive amount of
memory (RAM) to store the telomere sequences in the R session, roughly > 2 TB.

\code{telo_search} takes as input a \code{list} of fastq files and 
searches for telomere repeats in the sequences. It returns a 
list of sequences which contain telomere repeats (if \code{return_telomeres}: TRUE),
a \code{data.table} of statistics for each file and a \code{list} of files.
\code{return_telomeres} should only be TRUE when you have an exssesive amount of
memory (RAM) to store the telomere sequences in the R session, roughly > 2 TB.
}
\details{
The 'telo_search' function searches for telomere repeats in FASTQ files and 
generates related statistics. It begins by loading necessary libraries and configuring 
the TensorFlow environment, followed by cleaning up memory. The function reads the FASTQ 
files, searches for motifs from the 'grep_list', and, based on the 'return_telomeres' 
parameter, either returns the sequences containing telomere repeats or just the 
statistics. It supports parallel processing with a specified number of threads and 
can process multiple files at once. Additionally, 'verbose' and 'progress' options provide 
user feedback during execution. The function returns a list with the telomere sequences 
(if requested), a 'data.table' of statistics, and a list of the processed files.

The telo_search function efficiently searches for telomere repeats across 
a list of FASTQ files using parallel processing. It leverages the telomere_matching 
function to analyze each file for telomere motifs, collecting sequences and statistics 
such as average read length and percentage of telomere bases. The function runs these 
searches concurrently with pbmcapply::pbmclapply, handles multiple threads, and can 
optionally show progress updates. After processing, it compiles a data.table of statistics 
and, based on the return_telomeres parameter, returns either a list of telomere sequences, 
statistics, and file paths, or just the statistics and file paths. The function also manages 
verbosity and output directory options to control the search process and results.
}
