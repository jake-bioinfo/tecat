% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f04-Sliding_window.R
\name{sliding_window_parallel}
\alias{sliding_window_parallel}
\title{Sliding Window Telomere Sequence Processing in Parallel}
\usage{
sliding_window_parallel(
  telomere_file,
  window_length = 200,
  step = 100,
  environment = "linux",
  threads = 1,
  verbose = FALSE
)
}
\arguments{
\item{telomere_file}{A DNAStringSet object containing the telomere sequences
to be processed.}

\item{window_length}{An integer specifying the length of each sliding window.
Default is 200.}

\item{step}{An integer specifying the step size for moving the window. Default
is 100.}

\item{environment}{A character string specifying the environment in which to
run the function. Default is 'linux'.}

\item{threads}{An integer specifying the number of threads to use for parallel
processing. Default is 1.}

\item{verbose}{A logical specifying whether to print messages. Default is FALSE.}
}
\value{
A list of IRanges::Views objects, each containing overlapping windows
of the original telomere sequences.
}
\description{
The 'sliding_window_parallel' function generates overlapping
windows of specified length from telomere sequences in parallel, facilitating
the analysis of smaller, manageable segments of the sequences.
}
\details{
The 'sliding_window_parallel' function processes a set of telomere
sequences by creating overlapping windows of a specified length in parallel.
For each sequence in the input list, it generates a series of windows starting
from the beginning of the sequence, moving in steps defined by the 'step'
parameter. Each window has a length specified by the 'window_length' parameter.
The windows are stored in an 'IRanges::Views' object, with each window named
according to the original sequence. After processing all sequences, the function
cleans up memory and returns the list of windowed views, allowing for detailed
analysis of these smaller sequence segments.
}
